module.exports = {
    /**
     * Print a data to the console, can be a text, an object, etc
     * @param {*} data The data to print in the console
     * @returns 
     */
    /*print: (data) => {
        return console.log(data);
    },*/
    /**
     * Print a data in the console
     */
    print: console.log,
    /**
     * Advanced setTimeout
     * @param {number} ms Time in ms
     * @example await sleep(1000) //will wait before 1sec before continue
     * @returns 
     */
    sleep: (ms)=>{return new Promise(resolve=>setTimeout(()=>resolve(), ms))},
    /**
     * Transform a data to timestamp
     * @param {Date} date Date to transfrom
     * @returns 
     */
    dateToEpoch(date) {
        return parseInt(date.getTime() / 1000)
    },
    /**
     * Generate a random number
     * @param {number} min Minimum of the random value
     * @param {number} max Maximum of the random value
     * @returns 
     */
    randomNumber(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    },
    /**
     * Generate a random string
     * @param {number} Length Length of the string 
     * @returns 
     */
    randomChar(Length) {
        let length
        if (!Length || length == 0) length = 15
        else length = Length
        let res = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
        let value = ""
        for (let i = 0, n = res.length; i < length; ++i) {
            value += res.charAt(Math.floor(Math.random() * n))
        }
        return value
    },
    /**
     * Return true if the text contain a link or false if not
     * @param {string} string Text to check
     * @returns 
     */
    isLink(string){
        const reg = /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})/gi
        return reg.test(string)
    },
    /**
     * Convert an object to json
     * @param {object} data Data to convert
     * @returns 
     */
    toJSON(data){
        return JSON.stringify(data, null, 2)
    }
}